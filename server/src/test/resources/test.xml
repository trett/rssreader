<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>JUG.ru</title>
	<atom:link href="https://jug.ru/feed/" rel="self" type="application/rss+xml" />
	<link>https://jug.ru</link>
	<description></description>
	<lastBuildDate>Thu, 25 Apr 2019 12:52:49 +0000</lastBuildDate>
	<language>ru-RU</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.8.9</generator>
	<item>
		<title>Android-дайджест (12-25 апреля)</title>
		<link>https://jug.ru/2019/04/android-digest-39/</link>
		<pubDate>Thu, 25 Apr 2019 12:52:49 +0000</pubDate>
		<dc:creator><![CDATA[Евгений Трифонов]]></dc:creator>
				<category><![CDATA[Android]]></category>

		<guid isPermaLink="false">https://jug.ru/?p=5970</guid>
		<description><![CDATA[Главное: вышла Android Studio 3.4. Там, например, появился Resource Manager (это чтобы лучше видеть drawables, внучка моя). Но для Google важнее не новые фичи,...]]></description>
				<content:encoded><![CDATA[<article class="entry-content"><ul>
<li>Главное: <a href=https://android-developers.googleblog.com/2019/04/android-studio-34.html>вышла</a> Android Studio 3.4. Там, например, появился Resource Manager (это чтобы лучше видеть drawables, внучка моя). Но для Google важнее не новые фичи, а то, что начато воплощение Project Marble: мол, всё должно наконец-то стать стабильнее и надёжнее.<br />
&nbsp;</p>
<li>Ещё Google <a href=https://android-developers.googleblog.com/2019/04/improving-update-process-with-your.html>обещает</a> улучшить взаимодействие с разработчиками (в последнее время компанию jwtybdfkb ниже плинтуса — и в связи с тем, как она ограничивала приложения в доступе к разным вещам, и в связи с ошибочными удалениями аккаунтов разработчиков). Говорят, мы прислушались к фидбеку, заметили вашу фрустрацию, и теперь будем делать лучше. У вас ощущение, что с ботами разговариваете — увеличим команду, будете к живым людям обращаться, и так далее. В общем, звучит всё красиво. Осталось понять, насколько на практике всё действительно изменилось.<br />
&nbsp;</p>
<li>А разрешения тем временем продолжают отнимать. <a href=https://www.reddit.com/r/androiddev/comments/bej1em/first_official_api_hammer_for_q/>Обнаружилось</a>, что в Android Q приложения больше не смогут за пользователя включать/отключать Wi-Fi. Слышите этот тихий плач вдалеке? Это плачут разработчики приложений-автоматизаторов.<br />
&nbsp;</p>
<li>Раскладной смартфон Samsung Galaxy Fold, ранее претендовавший на то, чтобы изменить будущее Android, теперь уверенно претендует на звание главного технопровала года. Тестовые образцы, отправленные журналистам и блогерам для обзоров, ломались один за другим, и в итоге начало продаж <a href=https://www.theverge.com/2019/4/22/18511170/samsung-galaxy-fold-delay-indefinitely-statement-screen-display-broken-issues>отодвинуто</a> на неопределённый срок. Что теперь с будущим Android — непонятно, если вы ещё не начинали разбираться, как ваше приложение поведёт себя на раскладном экране — видимо, пока что можете этого и не делать.<br />
&nbsp;</p>
<li>Ни за что не угадаете, кто завёл блог об Android-разработке. Компания Microsoft! Там <a href=https://medium.com/android-microsoft/android-microsoft-5b71ae12cc4d>пришли</a> на Medium (с которого сейчас многие, наоборот, бегут) и намерены писать о том, как работают над своими Android-приложениями.<br />
&nbsp;</p>
<li>Интересный маленький факт: хотя Kotlin Multiplatform на данный момент выглядит сыровато, его активно <a href=https://medium.com/@kpgalligan/touchlab-square-collaborating-on-kotlin-multiplatform-eb6aa7eb4a4a>пробуют</a> Square и Touchlab. Сможет ли Square и тут стать флагманом индустрии, как было с Android-библиотеками компании?
<li>
<li>Как известно, рабочие инструменты можно обсуждать вечно. На Reddit <a href=https://www.reddit.com/r/androiddev/comments/bg67oe/what_are_your_top_3_plugins_for_android/>спросили</a> «какие плагины вы используете в разработке», в комментариях отметились многие, включая Джейка Уортона — так что можно изучать ответы, чтобы найти что-то для себя.<br />
&nbsp;</p>
<li>Ну и напоследок: уверены ли вы, что все пользователи вашего приложения — люди?<br />
<blockquote class="twitter-tweet" data-width="550">
<p lang="en" dir="ltr">Here&#39;s a video of a Chimpanzee using Instagram. It&#39;s eye-opening. <a href="https://t.co/FEfIgQSGa6">https://t.co/FEfIgQSGa6</a> <a href="https://t.co/d9AjhfPNN1">pic.twitter.com/d9AjhfPNN1</a></p>
<p>&mdash; Daniel Sinclair (@_DanielSinclair) <a href="https://twitter.com/_DanielSinclair/status/1121252893586276352?ref_src=twsrc%5Etfw">April 25, 2019</a></p></blockquote>
<p><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</ul>
</article>]]></content:encoded>
			</item>
		<item>
		<title>Android-дайджест (29 марта-11 апреля)</title>
		<link>https://jug.ru/2019/04/android-digest-38/</link>
		<pubDate>Thu, 11 Apr 2019 13:46:29 +0000</pubDate>
		<dc:creator><![CDATA[Евгений Трифонов]]></dc:creator>
				<category><![CDATA[Android]]></category>

		<guid isPermaLink="false">https://jug.ru/?p=5962</guid>
		<description><![CDATA[У Android Q вышла вторая бета. И там снова изменения во имя приватности пользователей! Вводится понятие Scoped Storage, которое «заменяет единые разрешения READ_EXTERNAL_STORAGE и...]]></description>
				<content:encoded><![CDATA[<article class="entry-content"><ul>
<li>У Android Q <a href=https://android-developers.googleblog.com/2019/04/android-q-beta-2-update.html>вышла</a> вторая бета. И там снова изменения во имя приватности пользователей! Вводится понятие <a href=https://developer.android.com/preview/privacy/scoped-storage>Scoped Storage</a>, которое «заменяет единые разрешения READ_EXTERNAL_STORAGE и WRITE_EXTERNAL_STORAGE более гранулированными разрешениями». При этом проводят <a href=https://docs.google.com/forms/d/e/1FAIpQLSdhhKVRKp1a7lj5XsQJ6rN9HyJ8d9WGPcdGwmTibWfhPUmj_g/viewform?vc=0&#038;c=0&#038;w=1>опрос</a> разработчиков «как на вас это скажется» и обещают учесть его результаты — если для вас тема актуальна, не провороньте.<br />
&nbsp;</p>
<li>Кроме ограничений, в этой бете ещё появились Bubbles — возможность свернуть приложение до «шарика», висящего поверх всего остального. Предназначено для тех случаев, когда какая-то активность требует проявляться «время от времени» (например, диалог в мессенджере): свернул её в шарик и занимаешься другими вещами, не теряя её из вида и легко в любой момент разворачиваешь.<br />
&nbsp;<br />
Возможность «сворачиваться» появится у тех приложений, разработчики которых её поддержат — так что смотрите сами, надо ли вам такое. И тут тоже приветствуют <a href=https://issuetracker.google.com/issues/new?component=190602&#038;template=1226573>фидбек</a>.<br />
&nbsp;</p>
<li>С новой бетой и с Android Studio 3.5 (сейчас в canary-версии) появилась возможность эмулировать «раскладные» телефоны, проверяя, точно ли ваше приложения правильно реагирует на раскладывание. Строго говоря, возможность была и раньше, у Samsung на сайте давно выложен специальный <a href=https://developer.samsung.com/galaxy/foldable/test>файл</a> для этого. Но он костыльный («сэмулируем планшет и будем использовать только часть его разрешения»), а теперь всё нативно.<br />
&nbsp;</p>
<li>Больше подкастов, хороших и очень! Появился новый: <a href=https://soundcloud.com/mobilepeopletalks>Mobile People Talks</a>. Пока что там два выпуска — первый как раз про Android Q, второй про Flutter. Нам этот подкаст особенно близок, потому что нему причастны люди, которых мы знаем по Mobius (<b>Владимир Иванов</b> давно участвует в программном комитете, <b>Кирилл Розов</b> в мае <a href=https://mobiusconf.com/talks/4m2vganfahdoxedss0br9l/>выступит</a> на Mobius как спикер).<br />
&nbsp;</p>
<li>Как можете помнить, про Flutter ещё хотел критически высказаться Джейк Уортон, но «участник команды Flutter не давал высказывать мнение, пользуясь внутрикорпоративной политикой». Теперь же Джейк пишет, что после ему разрешили-таки высказывать любые мнения о продуктах Google, если они обозначены как личные. Пока про Flutter не высказался, но запаслись попкорном и ждём шокирующих разоблачений.<br />
<blockquote class="twitter-tweet" data-width="550">
<p lang="en" dir="ltr">After some awkward meetings, email threads, and HR get involved, I have final confirmation that I&#39;m allowed to express my opinion on any Google product so long as it&#39;s clear they are my own. So get ready Twitter, I don&#39;t have to hold back on criticizing you-know-what anymore…</p>
<p>&mdash; Jake Wharton (@JakeWharton) <a href="https://twitter.com/JakeWharton/status/1111652587248537600?ref_src=twsrc%5Etfw">March 29, 2019</a></p></blockquote>
<p><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script><br />
&nbsp;</p>
<li>Когда-нибудь из постов <b>Романа Елизарова</b> можно будет собрать одну большую энциклопедию всего, связанного с асинхронностью, многопоточностью и корутинами в Kotlin. Его очередной пост — <a href=https://medium.com/@elizarov/cold-flows-hot-channels-d74769805f9>Cold flows, hot channels</a>.<br />
&nbsp;</p>
<li>В Android Pie добавили оптимизацию, ускоряющую запуск приложения после установки или апдейта. Поскольку она работает сама и не требует ничего от разработчика, нам разбираться в этом не требуется. Но поскольку вы наверняка пытливые умы, которым важно даже то, что «работает само», даём ссылку на <a href=https://android-developers.googleblog.com/2019/04/improving-app-performance-with-art.html?linkId=65565446>пост</a> о том, как оно работает.<br />
&nbsp;</p>
<li>Если вдруг вы считаете, что Android-опенсорсу не хватало ещё одного image picker, то знайте, что он <a href=https://github.com/kroegerama/bottomsheet-imagepicker>появился</a>.<br />
&nbsp;</p>
<li>И напоследок — Йонатан (который тоже <a href=https://mobiusconf.com/talks/35amiyer47caa2hbjvnkvd/>выступит</a> в мае на Mobius) о вечном:<br />
<blockquote class="twitter-tweet" data-width="550">
<p lang="en" dir="ltr"><a href="https://twitter.com/hashtag/AndroidDev?src=hash&amp;ref_src=twsrc%5Etfw">#AndroidDev</a> life in a nutshell <a href="https://t.co/h30RahrALp">pic.twitter.com/h30RahrALp</a></p>
<p>&mdash; Yonatan V.Levin (@parahall) <a href="https://twitter.com/parahall/status/1112327185556217856?ref_src=twsrc%5Etfw">March 31, 2019</a></p></blockquote>
<p><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</ul>
</article>]]></content:encoded>
			</item>
		<item>
		<title>Java-дайджест #85</title>
		<link>https://jug.ru/2019/03/digest-week-85/</link>
		<pubDate>Thu, 28 Mar 2019 12:36:52 +0000</pubDate>
		<dc:creator><![CDATA[Oleg Chirukhin]]></dc:creator>
				<category><![CDATA[Java]]></category>

		<guid isPermaLink="false">https://jug.ru/?p=5944</guid>
		<description><![CDATA[Этот дайджест взаимодополняет выпуск подкаста «Разбор Полётов». На этот раз в студии были Алексей Абашев, Андрей Когунь и Олег Чирухин. Получить запись подкаста можно...]]></description>
				<content:encoded><![CDATA[<article class="entry-content"><p>Этот дайджест взаимодополняет выпуск подкаста «Разбор Полётов». На этот раз в студии были Алексей Абашев, Андрей Когунь и Олег Чирухин.<br />
Получить запись подкаста можно либо пройдя по ссылке <a href="http://razbor-poletov.com/2019/03/episode-203.html">на сайт РП</a>, либо скачав <a href="http://traffic.libsyn.com/razborpoletov/razbor_203.mp3">MP3-файл</a>.</p>
<h1>JDK, Java и JVM-языки</h1>
<ul>
<li><a href="https://habr.com/ru/company/jugru/blog/444434/" rel="nofollow">Вышла Java/JDK 12</a>.</li>
<li>Мощная статья Парлога про <a href="http://blog.codefx.org/java/java-12-guide/" rel="nofollow">переход на Java 12</a>.</li>
<li>В современной японии, эра начинается со времени восхождения императора. Первого апреля текущий император отрекается от престола в пользу своего сына, и в JDK должна появиться новая эра. Пока что в JDK 12 стоит заглушка с названием 元号 (&#171;NewEra&#187;). Во всех JDK, с 7 по 12, вклюая долгоиграющие версии (8 и 11) <a href="https://blogs.oracle.com/java-platform-group/a-new-japanese-era-for-java" rel="nofollow">будут обновлены календари</a>.</li>
<li>Gluon выпустили новый релиз JavaFX 12, это второй релиз со времени отделения от JDK. Исправлены проблемы вроде мыльных шрифтов в Ubuntu/Debian и тормознутой прокрутки мышкой в macOS.</li>
<li><a href="https://habr.com/ru/company/jugru/blog/444884/" rel="nofollow">Из Groovy ушёл Cédric Champeau</a>.<br />
<blockquote><p>«I am Cédric. I am not Gradle Inc.<br />
I am Cédric. I am not Kotlin.<br />
I am Cédric. I am not Groovy.<br />
Technologies live and die, I’m not interested in being married with a technology».</p></blockquote>
</li>
</ul>
<h1><a id="user-content-spring" class="anchor" href="https://gist.github.com/olegchir/cf1cf510b1becab773482e82614f6639#spring" aria-hidden="true"></a>Spring</h1>
<ul>
<li>Свежие выпуски <a href="https://spring.io/blog/2019/03/19/this-week-in-spring-march-19th-2019" rel="nofollow">This Week in Spring</a> и <a href="https://spring.io/blog/2019/03/20/spring-tips-reactive-mysql-support-with-jasync-sql-and-r2dbc" rel="nofollow">Spring Tips</a> от Джоша Лонга.</li>
<li><a href="https://spring.io/blog/2019/03/21/spring-initializr-updates" rel="nofollow">В Spring Initializr</a> вернули назад список с зависимостями.</li>
<li>Вышел <a href="https://spring.io/blog/2019/03/18/spring-cloud-data-flow-2-0-1-ga-released" rel="nofollow">Spring Cloud Data Flow 2.0.1 GA</a>.</li>
<li>Вышел <a href="https://spring.io/blog/2019/03/20/announcing-general-availability-of-spring-cloud-function-2-1-0-m1" rel="nofollow">Spring Cloud Function &#8212; 2.1.0.M1</a>. Куча ченжей, понятные майлстоунщикам. Вроде неявной композиции, когда <code>catalog.lookup("")</code>, <code>catalog.lookup("|")</code>, <code>catalog.lookup("foo|")</code> и <code>catalog.lookup("|bar")</code> &#8212; это достаточная для работы информация.</li>
<li>Вышли <a href="https://spring.io/blog/2019/03/22/spring-boot-for-apache-geode-pivotal-gemfire-1-0-0-m4-released" rel="nofollow">Spring Boot for Apache Geode и Pivotal GemFire 1.0.0.M4</a>.</li>
</ul>
<h1><a id="user-content-jetbrains" class="anchor" href="https://gist.github.com/olegchir/cf1cf510b1becab773482e82614f6639#jetbrains" aria-hidden="true"></a>JetBrains</h1>
<ul>
<li>В субботу, 13 апреля, пройдёт <a href="https://info.jetbrains.com/jetbrains-night-moscow-2019.html">JetBrains Nights.</a> Kotlin, Java, веб.</li>
<li>Отличная статья <a href="https://habr.com/ru/company/JetBrains/blog/444052/" rel="nofollow">&#171;Как мы в IntelliJ IDEA ищем лямбда-выражения&#187;</a> от Тагира Валеева в корпоративном блоге на Хабре. Нужно читать!</li>
<li>Вышла <a href="https://blog.jetbrains.com/idea/2019/03/intellij-idea-2019-1-release-candidate-is-out/" rel="nofollow">IntelliJ IDEA 2019.1</a> с обновлёнными Maven-диаграммами и поддержкой докера в отладчике.</li>
<li>Catching Vulnerabilities Instantly in Your IntelliJ IDEA Environment. ([Ссылка])(<a href="https://blog.jetbrains.com/idea/2019/03/catching-vulnerabilities-instantly-in-your-intellij-idea-environment/" rel="nofollow">https://blog.jetbrains.com/idea/2019/03/catching-vulnerabilities-instantly-in-your-intellij-idea-environment/</a>)</li>
</ul>
<h1><a id="user-content-eclipse--jakarta" class="anchor" href="https://gist.github.com/olegchir/cf1cf510b1becab773482e82614f6639#eclipse--jakarta" aria-hidden="true"></a>Eclipse &amp; Jakarta</h1>
<ul>
<li>Вышел <a href="https://www.eclipse.org/eclipseide/2019-03/" rel="nofollow">Eclipse 2019.03</a>, потому что квартальный релиз, это его долг. Потянул за собой под статью ещё <a href="https://projects.eclipse.org/releases/2019-03" rel="nofollow">75 невинных проектов</a>.</li>
<li>Вышел очередной квартальный релиз Eclipse Web Tools Platform WTP 3.13. <a href="http://www.eclipse.org/webtools/releases/3.13/" rel="nofollow">Анонс</a>, <a href="https://bugs.eclipse.org/bugs/buglist.cgi?classification=WebTools&amp;query_format=advanced&amp;target_milestone=3.13&amp;target_milestone=3.13%20M1&amp;target_milestone=3.13%20M2&amp;target_milestone=3.13%20M3&amp;target_milestone=3.13%20RC1&amp;target_milestone=3.13%20RC2&amp;target_milestone=3.13.0" rel="nofollow">ченжлог</a>.</li>
<li>Вышли <a href="https://eclipsesource.com/blogs/2019/03/21/emf-forms-and-emf-client-platform-1-20-0-released/" rel="nofollow">EMF Forms и EMF Client Platform версий 1.20.0</a>. <a href="https://bugs.eclipse.org/bugs/buglist.cgi?bug_status=UNCONFIRMED&amp;bug_status=NEW&amp;bug_status=ASSIGNED&amp;bug_status=REOPENED&amp;bug_status=RESOLVED&amp;bug_status=VERIFIED&amp;bug_status=CLOSED&amp;classification=Modeling&amp;component=Common&amp;component=Editor&amp;component=EMF%20Forms&amp;component=Model%20Workspace&amp;component=Navigator&amp;component=Validation&amp;keywords=noteworthy&amp;keywords_type=anywords&amp;list_id=18254937&amp;product=ECP&amp;query_format=advanced&amp;target_milestone=1.20.0" rel="nofollow">Ченжлог</a>.</li>
<li>OpenLiberty переходит на <a href="https://openliberty.io/blog/2019/02/01/new-4-weekly-release-schedule.html" rel="nofollow">4-недельный график релизов</a>.</li>
<li><a href="https://thorntail.io/posts/announcing-thorntail-2-4-0-final/" rel="nofollow">Thorntail 2.4.0.Final</a> релизнулся с поддержкой Java 11, MicroProfile 2.2, и разными улучшениями (например, в Gradle).</li>
</ul>
<h1><a id="user-content-hibernate" class="anchor" href="https://gist.github.com/olegchir/cf1cf510b1becab773482e82614f6639#hibernate" aria-hidden="true"></a>Hibernate</h1>
<ul>
<li><a href="http://in.relation.to/2019/03/21/hibernate-validator-6016-final-out/" rel="nofollow">Hibernate Validator</a> 6.0.16.Final с поддержкой Java 12, починенным билдом на Windows и ошибкой округления <code>BigDecimal</code>, <a href="https://hibernate.atlassian.net/browse/HV-1705?jql=project%20%3D%20HV%20AND%20fixVersion%20%3D%206.0.16.Final%20order%20by%20created%20DESC" rel="nofollow">и так далее</a>.</li>
<li><a href="http://in.relation.to/2019/03/22/hibernate-orm-542-final-out/" rel="nofollow">Hibernate ORM 5.4.2.Final</a> с огромным количеством <a href="https://hibernate.atlassian.net/secure/ReleaseNote.jspa?version=31748&amp;styleName=Html&amp;projectId=10031" rel="nofollow">мелких исправлений</a>, типа несчастного <code>BigDecimal</code>.</li>
<li><a href="http://in.relation.to/2019/03/22/hibernate-search-6-0-0-Alpha3/" rel="nofollow">Hibernate Search 6.0.0.Alpha3</a>. Подробности по ссылке для любителей альфа-версий.</li>
</ul>
<h1><a id="user-content-devops-tools" class="anchor" href="https://gist.github.com/olegchir/cf1cf510b1becab773482e82614f6639#devops-tools" aria-hidden="true"></a>DevOps tools</h1>
<ul>
<li>Релизнулся <a href="https://about.gitlab.com/2019/03/22/gitlab-11-9-released/" rel="nofollow">GitLab 11.9</a>. Фича под названием Secret Detection ищет, когда кто-то пытается коммитить пароли, которых в репозитории быть не должно. Фича ChatOps отправляется в опенсорс, и соответственно в корную часть; она позволяет управлять джобами через Slack.</li>
<li>8 месяцев прошло с последнего релиза Istio 1.0, пришло время для версии 1.1, основная тема которой &#8212; Enterprise Ready. Улучшенный мультикластеринг, изоляция неймспейсов, улучшенные дата и контрол плейны. <a href="https://istio.io/blog/2019/announcing-1.1/" rel="nofollow">Анонс</a>, <a href="https://istio.io/about/notes/1.1/" rel="nofollow">ченжлог</a>.</li>
<li>Solo.io выпускает альтернативу для Isto, это <a href="https://gloo.solo.io/" rel="nofollow">Gloo</a> &#8212; API-гейтвей, реализованный как <a href="https://kubernetes.io/docs/concepts/services-networking/ingress/" rel="nofollow">ингресс-контроллер</a>.</li>
<li>Google запустили <a href="https://cloud.google.com/tekton/" rel="nofollow">Tekton</a> &#8212; Kubernatis-native фреймворк для создания CI/CD систем. Репозиторий <a href="https://github.com/tektoncd">на Github</a>, написано преимущественно на Golang.</li>
<li>TriggerMesh зарелизили свежий опенсорсный проект <a href="https://triggermesh.com/serverless_management_platform/knative-lambda-sources/" rel="nofollow">Knative Lambda Sources (KLASS)</a>. KLASS &#8212; это event sources, которые триггерят функции Knative в кластере Kubernetes. Таким образом, события AWS можно обрабатывать в мультиклауде или на своем железе. Этот релиз парный к выпуску <a href="https://github.com/triggermesh/knative-lambda-runtime">Knative Lambda Runtimes</a>.</li>
<li>RedHat зарелизили <a href="https://developers.redhat.com/blog/2019/03/07/quarkus-next-generation-kubernetes-native-java-framework/" rel="nofollow">Quarkus</a> &#8212; Kubernetes-native фреймворк для Java (OpenJDK и GraalVM). Суть в повышенной эффективности &#8212; быстрый стартап, быстрое машстабирование микросевисов, низкое потребление памяти, небольшой размер приложения и образа контейнера.</li>
<li>За одним, держите <a href="http://adambien.blog/roller/abien/entry/jax_rs_cdi_native_executable" rel="nofollow">видосик от Adam Bien</a> про Quarkus и JAX-RS/CDI.</li>
<li>Google Cloud Table <a href="https://cloud.google.com/blog/products/databases/go-global-with-cloud-bigtable" rel="nofollow">теперь реплицируется</a> не только в рамках региона, а глобально. Реплицируемый кластер можно создать когда угодно в любой зоне.</li>
<li>Вышел <a href="https://golang.org/doc/go1.12" rel="nofollow">Golang 1.12</a>. Улучшения в производительности и поддержке модулей (например, можно запустить команду в модуле, даже если нет <code>go.mod</code>).</li>
</ul>
<h1><a id="user-content-хабр-за-неделю" class="anchor" href="https://gist.github.com/olegchir/cf1cf510b1becab773482e82614f6639#%D1%85%D0%B0%D0%B1%D1%80-%D0%B7%D0%B0-%D0%BD%D0%B5%D0%B4%D0%B5%D0%BB%D1%8E" aria-hidden="true"></a>Хабр за неделю</h1>
<ul>
<li>13 марта 2019 года в офисе компании КРОК прошла очередная встреча сообщества московских Java-разработчиков jug.msk.ru, на которой Паша Финкельштейн рассказал о своём опыте использования языка программирования Kotlin. <a href="https://habr.com/ru/company/jugru/blog/444166/" rel="nofollow">Отчёт здесь</a>.</li>
<li>OBD2 reader — диагностика автомобиля. <a href="https://habr.com/ru/post/444726/" rel="nofollow">Ссылка</a>.</li>
<li>Случайные базы данных. Oracle Enterprise Data Quality — щит и меч корпоративного хранилища. <a href="https://habr.com/ru/company/rdtex/blog/444700/" rel="nofollow">Ссылка</a>.</li>
<li>JDK 9/JEP 280: конкатенация строк никогда больше не будет прежней. <a href="https://habr.com/ru/company/otus/blog/444822/" rel="nofollow">Ссылка</a>. Интересно, что это не перевод самого JEP, а перевод статьи с DZone о нём.</li>
<li>Почему бессерверные технологии – это революция в продукт-менеджменте. <a href="https://habr.com/ru/company/piter/blog/444730/" rel="nofollow">Ссылка</a>. Перевод известного поста Джеймса Безуика.</li>
<li>Как мы в IntelliJ IDEA ищем лямбда-выражения. <a href="https://habr.com/ru/company/JetBrains/blog/444052/" rel="nofollow">Ссылка</a>. @lany.</li>
<li>Из Groovy ушёл Cédric Champeau. <a href="https://habr.com/ru/company/jugru/blog/444884/" rel="nofollow">Ссылка</a>.</li>
</ul>
<h1><a id="user-content-разное" class="anchor" href="https://gist.github.com/olegchir/cf1cf510b1becab773482e82614f6639#%D1%80%D0%B0%D0%B7%D0%BD%D0%BE%D0%B5" aria-hidden="true"></a>Разное</h1>
<ul>
<li>Свежий выпуск <a href="https://www.petrikainulainen.net/weekly/java-testing-weekly-13-2019/" rel="nofollow">Java Testing Weekly</a>.</li>
<li>ECMA TC39 финализировала набор фичей ES2019 (ECMAScript 2019). Суть в улучшении деталей работы с массивами, объектами, строками, символами, блоками try-catch и JSON. Подробности <a href="https://tc39.github.io/" rel="nofollow">у них на сайте</a>, список пропозалов &#8212; <a href="https://github.com/tc39/proposals/">на гитхабе</a>.</li>
<li>Команда Google Chrome анонсировала некий <a href="https://developers.google.com/web/updates/2019/02/trusted-types" rel="nofollow">Trusted Types API</a>, который позволит бороться с DOM Cross-Site Scripting (XSS). Очень интересная фича, надо смотреть.</li>
<li>Google запустили <a href="https://opensource.googleblog.com/2019/03/introducing-season-of-docs.html" rel="nofollow">Season of Docs</a>, программу по работе с сообществом для улучшения документации в OpenSource проектах.</li>
<li>Google релизнули <a href="https://security.googleblog.com/2019/03/open-sourcing-sandboxed-api.html" rel="nofollow">Sandboxed API</a> (SAPI). Оно умеет автоматически генерить обертки над C/C++ библиотеками, после чего запускает в отдельном сендбокс-процессе и общается с вызывающей библиотекой с помощью IPC. Идея не новая, но теперь &#8212; реализованная с качеством Google.</li>
<li>Khronos Group выпустили <a href="https://www.khronos.org/news/press/khronos-releases-openxr-0.90-provisional-specification-for-high-performance-access-ar-vr-platforms-and-devices" rel="nofollow">спецификацию OpenXR</a> и API версии 0.90. Это открытый и бесплатный стандарт как для платформ augmented reality (AR) и virtual reality (VR), так и для AR/VR устройств, который упрощает разработку подо все эти штуки.</li>
<li>Julian Garnier релизнул <a href="https://github.com/juliangarnier/anime">Anime 3.0</a> &#8212; новую версию JS движка для анимации, теперь с поддержкой модулей ECMAScript 6, современных бандлеров вроде Webpack и Rollup и прочей благодати. Вместе с ним поставляется <a href="https://animejs.com/documentation/#cssSelector" rel="nofollow">сайт с документацией</a>, где можно глазами взглянуть на все его основные фичи (которые, внезапно, не про вебпак, а про анимацию).</li>
</ul>
<h1>Дайджест готовили</h1>
<ul>
<li>Текстовая версия: Олег Чирухин;</li>
<li>Подкаст «Разбор Полётов» (<a href="http://razbor-poletov.com/2019/02/episode-203.html">ссылка на запись</a>): Алексей Абашев, Олег Чирухин, Андрей Когунь, Антон Архипов, Виктор Гамов, Барух Садогурский.</li>
</ul>
</article>]]></content:encoded>
	<enclosure url="http://traffic.libsyn.com/razborpoletov/razbor_203.mp3" length="0" type="audio/mpeg" />
		</item>
		<item>
		<title>Android-дайджест (15-28 марта)</title>
		<link>https://jug.ru/2019/03/android-digest-37/</link>
		<pubDate>Thu, 28 Mar 2019 12:24:44 +0000</pubDate>
		<dc:creator><![CDATA[Евгений Трифонов]]></dc:creator>
				<category><![CDATA[Android]]></category>

		<guid isPermaLink="false">https://jug.ru/?p=5951</guid>
		<description><![CDATA[Предыдущий дайджест начинался с новости о бета-версии Android Q. Теперь, когда прошли две недели, многие разобрали её подробнее: Если хочется увидеть все изменения одним...]]></description>
				<content:encoded><![CDATA[<article class="entry-content"><p>Предыдущий дайджест начинался с новости о бета-версии Android Q. Теперь, когда прошли две недели, многие разобрали её подробнее:</p>
<ul>
<li>Если хочется увидеть все изменения одним русскоязычным списком — есть <a href=https://medium.com/@kirillr/android-q-beta-1-обзор-изменений-для-разработчиков-bd5c6829f167>пост</a> <b>Кирилла Розова</b>.<br />
&nbsp;</p>
<li>Если хочется прочитать подробный разбор некоторых из них — <b>Джо Бёрч</b> написал отдельные тексты про <a href=https://joebirch.co/2019/03/26/exploring-android-q-sharing-shortcuts/>Sharing Shortcuts</a> (&#171;share&#187; больше не тормозит!), <a href=https://joebirch.co/2019/03/18/exploring-android-q-location-permissions/>Location Permissions</a> и <a href=https://joebirch.co/2019/03/14/exploring-android-q-settings-panels/>Settings Panels</a>.<br />
&nbsp;</p>
<li>Если хочется послушать живое обсуждение — у «Android Dev Подкаста» отдельный <a href=https://androiddev.apptractor.ru/android-dev-podkast-90/>выпуск</a> об этом.<br />
&nbsp;</p>
<li>Если хочется погадать на кофейной гуще — с <a href=https://commonsware.com/blog/2019/03/25/death-external-storage-what-now.html>external storage</a> всё странно и непонятно.<br />
&nbsp;</p>
<li>Теперь не про Q. Пока приближается майский <a href=https://mobiusconf.com><b>Mobius</b></a>, мы открыли на YouTube видеозаписи докладов декабрьского, а также составили <a href=https://habr.com/ru/company/jugru/blog/445238/>топ-10</a> из них. Лидером оказалось выступление <b>Артёма Зиннатуллина</b> про сборку. А на третьем месте доклад <b>Йонатана Левина</b>, и Йонатан как раз сейчас сделал <a href=https://proandroiddev.com/android-cpu-compilers-d8-r8-a3aa2bfbc109 >блог-пост</a> по его мотивам.<br />
&nbsp; </p>
<li>В докладе Артёма говорил «Bazel — это будущее», а теперь он <a href=https://twitter.com/artem_zin/status/1106295314879672320>твитнул</a> любопытное косвенное подтверждение этому: в документации Android Q заметили конфигурацию Bazel.<br />
&nbsp;</p>
<li>Был проведён любительский опрос «сколько у вас модулей и как с ними живёте» (выборка 127 человек), теперь есть <a href=https://medium.com/@emmaguy/android-modularisation-the-results-58a4bf17602e>пост</a> с результатами. Почти у всех в пределах 30 модулей и сборка через Gradle, но есть один респондент с приложением на 800 модулей, использующий Buck. Кажется, и в этом опросе поучаствовал Артём!<br />
&nbsp;</p>
<li>Мы на прошлой неделе опубликовали <a href=https://vc.ru/dev/61878-davayte-uvolim-polovinu-razrabotchikov-krossplatformennaya-mobilnaya-razrabotka-v-2019-godu>обзорный текст</a> о том, как в 2019-м подходят к кроссплатформенной разработке (Flutter, Kotlin multiplatform, PWA). А тем временем <b>Джейк Уортон</b> совсем сорвался с цепи и <a href=https://twitter.com/JakeWharton/status/1109517688769048576>твитит</a> «я бы сказал вам, почему Flutter — плохой подход к кроссплатформенности, но человек из команды Flutter активно использует внутрикорпоративную политику, чтобы не дать мне этого сделать».<br />
&nbsp;</p>
<li>Google в рамках Project Marble улучшает в числе прочего эмулятор в Android Studio, и <a href=https://medium.com/androiddevelopers/android-emulator-project-marble-improvements-1175a934941e?linkId=65305042>написал</a> об этом. Там есть любопытное: например, эмулятор по умолчанию считал, что воткнут в розетку, но это заставляет его требовать больше ресурсов (виртуальное устройство начинает активно делать в фоне много чего), так что решили сделать дефолтной «работу от аккумулятора».<br />
&nbsp;</p>
<li>У подкаста «Разбор полётов» вышел <a href=https://razborpoletov.com/2019/03/episode-202.html>выпуск</a> с участниками ПК Mobius <b>Владимиром Ивановым</b> (Android) и <b>Николаем Ашаниным</b> (iOS). Поскольку подкаст изначально про Java и бэкенд, там не обошлось без сравнения мобильной разработки с бэкендной.<br />
&nbsp;</p>
<li>Продолжаются недовольства разработчиков в адрес Google. Есть <a href=https://www.reddit.com/r/androiddev/comments/b2ztr0/google_terminated_our_startups_developer_account/>очередная история</a> несправедливо удалённого аккаунта в Google Play, есть <a href=https://gbl08ma.com/developing-for-android-is-like-being-a-demonetized-youtuber/>манифест</a> обо всём, что неправильно (API у разработчиков отнимают очень неправильным образом и так далее), есть <a href=https://www.reddit.com/r/androiddev/comments/b6agcv/protest_at_google_io_2019/>призывы</a> протестовать на Google I/O против всего этого.<br />
&nbsp;<br />
Тем временем конкретно об «изменениях политик и правил Google Play» 29 марта <a href=https://habr.com/ru/company/google/blog/445180/>состоится</a> русскоязычный вебинар, и там обещают ответить на наболевшее. Комментарии показывают, что людей волнуют в основном необоснованные удаления.<br />
&nbsp;</p>
<li>Ну и напоследок — у каждого из нас есть что-то такое:<br />
<blockquote class="twitter-tweet" data-width="550">
<p lang="en" dir="ltr">Hi, I&#39;m Guillermo, I&#39;ve been coding Android since 1.5 Cupcake, and I still forget to declare the activity in the manifest.</p>
<p>&mdash; Guillermo Orellana (@wiyarmir) <a href="https://twitter.com/wiyarmir/status/1107936786624466945?ref_src=twsrc%5Etfw">March 19, 2019</a></p></blockquote>
<p><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script></p>
</article>]]></content:encoded>
			</item>
		<item>
		<title>Пришло время Java 12! Обзор горячих JEP-ов</title>
		<link>https://jug.ru/2019/03/java12/</link>
		<pubDate>Tue, 19 Mar 2019 18:32:23 +0000</pubDate>
		<dc:creator><![CDATA[Oleg Chirukhin]]></dc:creator>
				<category><![CDATA[Java]]></category>
		<category><![CDATA[Новости]]></category>
		<category><![CDATA[12]]></category>
		<category><![CDATA[Java 12]]></category>
		<category><![CDATA[JDK]]></category>
		<category><![CDATA[JDK 12]]></category>
		<category><![CDATA[OpenJDK]]></category>
		<category><![CDATA[OpenJDK 12]]></category>

		<guid isPermaLink="false">https://jug.ru/?p=5935</guid>
		<description><![CDATA[&#160; Прошло полгода, а значит — время устанавливать новую Java! Это был долгий путь, и до конца добрались немногие. Из интересных JEP-ов отвалились сырые строки, а...]]></description>
				<content:encoded><![CDATA[<article class="entry-content"><p>&nbsp;</p>
<p>Прошло полгода, а значит — <a href="https://mail.openjdk.java.net/pipermail/jdk-dev/2019-March/002718.html">время устанавливать новую Java</a>! Это был долгий путь, и до конца добрались немногие. Из интересных JEP-ов отвалились <a href="https://openjdk.java.net/jeps/326">сырые строки</a>, а вот об оставшемся мы поговорим дальше.</p>
<h1 id="kak-vsyo-proishodit">Как всё происходит</h1>
<p>Выпуск новой версии Java проходит согласно новому &#171;ускоренному&#187; релизному циклу длиной примерно в полгода. Точные даты определены на <a href="https://openjdk.java.net/projects/jdk/12/">странице проекта</a>. Для JDK 12 существовало несколько основных фаз:</p>
<ul>
<li>2018/12/13 — Первая фаза замедления (в этот момент делается форк от основной ветки в репозитории);</li>
<li>2019/01/17 — Вторая фаза замедления (завершить всё, что только можно);</li>
<li>2019/02/07 — Релиз-кандидат (фиксятся только самые важные баги);</li>
<li>2019/03/19 — Релиз, General Availability. <strong>&lt; — вы находитесь здесь</strong></li>
</ul>
<p>Что нам с этого расписания? Да в сущности, ничего — мы только что пришли к финишу, и барски взираем на любителей легаси с высоты новенькой свеженькой JDK 12.</p>
<h1 id="bagi-panika-vse-na-dno">Баги! Паника! Все на дно!</h1>
<p><img src="https://habrastorage.org/webt/9j/jw/j8/9jjwj87t8vtlqyiv4zmox4xljem.jpeg" /></p>
<p>Когда выходит новая не-LTS версия, обычно всем глубоко наплевать на новые фичи. Интересней, не развалится ли всё к морским чертям.</p>
<p>Конечно, баги есть, много, но не в JDK 12 🙂 Судя по джире — всё в норме:</p>
<p><img src="https://habrastorage.org/webt/st/yr/cr/styrcrroe8hobgqc6jpxgv5hknw.jpeg" /></p>
<p>Процитирую запрос, чтобы вы <em>в точности</em> понимали, что такое &#171;норма&#187;:</p>
<p><script src="https://gist.github.com/olegchir/0aae56ae410ce2fbafda89fd92c1e6f9.js"></script></p>
<p>Конечно, <em>вообще</em> баги имеют место быть, они никуда они не денутся в настолько огромном проекте. Утверждается только, что прямо сейчас P1 багов не замечено.</p>
<p>Более формально общение с багами задекларировано в специальном документе, <a href="https://openjdk.java.net/jeps/3">JEP 3: JDK Release Process</a>, владельцем которого является наш бессмертный стюард по неспокойным волнам Java-океана — Марк Рейнхольд.</p>
<p>И в особенности стоит <a href="https://openjdk.java.net/jeps/3#Bug-Deferral-Process">докопаться абзаца</a>, рассказывающего, <del>кто виноват и что делать</del>, как переносить тикеты, если к 12 релизу уже не успеть. Надо поставить в багтрекере метку <code>jdk$N-defer-request</code> в которой N указывает, с какого именно релиза хочется перенести, и оставить комментарий, первая строка которого — <em>Deferral Request</em>. Дальше за ревью всех таких запросов берутся лиды соответствующих областей и проектов.</p>
<p>Проблемы прохождения TCK нельзя проигнорировать подобным образом — гарантируется, что Java остаётся Java, а не чем-то жабообразным. Метка <code>jdk$N-defer-request label</code> никуда не исчезает. Интересно, что они делают с людьми, которые нарушают правило неудаления метки — предлагаю скормить морским свинкам.</p>
<p>Тем не менее, таким образом можно посмотреть, сколько багов перенесено на JDK 13. Попробуем такой запрос:</p>
<p><script src="https://gist.github.com/olegchir/1de34cdc3e756a0c25dddbab771235f3.js"></script></p>
<p>Всего 1 штука, <a href="https://bugs.openjdk.java.net/browse/JDK-8216039">JDK-8216039</a>: &#171;TLS with BC and RSASSA-PSS breaks ECDHServerKeyExchange&#187;. Негусто. Если этот довод всё ещё не помог, то, как ваш адвокат, рекомендую попробовать успокоительное.</p>
<h1 id="i-chto-zhe-v-suhom-ostatke">И что же в сухом остатке?</h1>
<p><img src="https://habrastorage.org/webt/ef/uf/mx/efufmx-2rdphagrcihuscp0cswo.png" /></p>
<p>Ясно, что большинство фичей затрагивает не пользователей (Java-программистов), а разработчиков самого OpenJDK. Поэтому я на всякий случай делю фичи на <strong>внешние</strong> и <strong>внутренние</strong>. Внутренние можно пропустить, но я обижусь, столько текста написал.</p>
<p><strong>189: <a href="http://openjdk.java.net/jeps/189">Shenandoah: A Low-Pause-Time Garbage Collector (Experimental)</a></strong></p>
<p><strong>Внешняя фича</strong>. Вкратце, люди не любят, когда Java тормозит, особенно если SLA требует отзывчивости порядка 10-500 миллисекунд. Теперь у нас есть бесплатный низкопаузный GC, который пытается работать ближе к левому краю этого диапазона. Компромисс таков, что мы обмениваем CPU и RAM на уменьшение задержек. Фазы маркировки и уплотнения хипа работают параллельно с живыми тредами приложения. Оставшиеся небольшие паузы связаны с тем, что всё равно надо искать и обновлять корни графа объектов.</p>
<p>Если ничего из сказанного не имеет для вас никакого смысла — не беда, Shenandoah <em>просто работает</em>, вне зависимости от понимания или непонимания глубинных процессов.</p>
<p>Работают над ним Алексей Шипилёв, Кристина Флад и Роман Кеннке — нужно сильно постараться, чтобы не знать об этих людях. Если вы в целом понимаете, как работают GC но не представляете, чем там может заниматься разработчик — рекомендую взглянуть на хаброперевод чудесной Лёшиной статьи <a href="https://habr.com/ru/company/jugru/blog/443250/">&#171;Самодельный сборщик мусора для OpenJDK&#187;</a> или на серию <a href="https://shipilev.net/jvm/anatomy-quarks/">JVM Anatomy Quarks</a>. Это <strong>очень интересно</strong>.</p>
<hr />
<p><strong>230: <a href="http://openjdk.java.net/jeps/230">Microbenchmark Suite</a></strong></p>
<p><strong>Внутренняя фича</strong>. Если вы хоть раз пытались писать микробенчмарки, то знаете, что это делается на JMH. JMH — это фреймворк для создания, сборки, запуска и анализа микробенчмарков для Java и других JVM-языков, написанный <a href="https://shipilev.net/">сами понимаете кем</a> (все совпадения случайны). К сожалению, не всё, что делается в мире &#171;нормальных&#187; приложений можно применить внутри JDK. Например, вряд ли мы когда-то увидим там нормальный код на Spring Framework.</p>
<p>К счастью, начиная с 12 версии можно использовать хотя бы JMH, и уже есть набор тестов, которые на нём написаны. Посмотреть можно в <a href="https://hg.openjdk.java.net/jdk/jdk12/file/0276cba45aac/test/micro/org/openjdk/bench"><code>jdk/jdk/test/micro/org/openjdk/bench</code></a> (можете в браузере прямо посмотреть, этот путь — ссылка).</p>
<p>Например, вот как выглядит <a href="https://hg.openjdk.java.net/jdk/jdk12/file/0276cba45aac/test/micro/org/openjdk/bench/vm/gc/Alloc.java">тест на GC</a>.</p>
<p><i>Напомню что здесь у нас не StackOverflow, и использовать код из копипасты, здесь и далее в статье, запрещено без чтения и соблюдения всех лицензий из <a href="https://hg.openjdk.java.net/jdk/jdk12/file/0276cba45aac/test/micro/org/openjdk/bench/vm/gc/Alloc.java">соответствующего файла</a> и <a href="https://hg.openjdk.java.net/jdk/jdk12/file/0276cba45aac">проекта OpenJDK</a> вообще, иначе на каком-нибудь суде у тебя с легкостью отсудят последние носки.</i></p>
<p><script src="https://gist.github.com/olegchir/cb21a721d79222a4f1ba9d0698d81120.js"></script></p>
<hr />
<p><strong><a href="http://openjdk.java.net/jeps/325">325: Switch Expressions (Preview)</a></strong></p>
<p><strong>Внешняя фича</strong>. Коренным способом изменит ваш подход к написанию бесконечных свичей длиной более двух экранов. Глядите:</p>
<h3 id="virgin-java-switch-vs-">Virgin Java Switch vs &#8230;</h3>
<p><script src="https://gist.github.com/olegchir/dc125077e871fee3982a3fd0a0f1c18b.js"></script></p>
<p><strong>Почему плохо</strong>: много букв, можно пропустить break (особенно, если ты наркоман, или болеешь СДВГ).</p>
<h3 id="-vs-chad-java-swtich-expression">… vs Chad Java Swtich Expression!</h3>
<p><script src="https://gist.github.com/olegchir/640e309caed1fc19564131c9a3c70019.js"></script></p>
<p><strong>Почему хорошо</strong>: мало букв, безопасно, удобно, новая клёвая фича.</p>
<p><strong>Бонус</strong>: если ты садист, то тебе доставит глубочайшее удовлетворение, как тысячи разработчиков IDE теперь мучаются с поддержкой этой фичи. Да, <a class="user_link" href="https://habr.com/ru/users/lany/">lany</a>, да? <del>Его можно поймать <a href="https://jpoint.ru/talks/4ltyzdxqzmpeofbgkld7ns/">после доклада 6-ого апреля</a> и мягко попросить выдать все грязные подробности.</del></p>
<hr />
<p><strong>334: <a href="http://openjdk.java.net/jeps/334">JVM Constants API</a></strong></p>
<p><strong>Внутренняя фича</strong>. Разработчикам хочется манипулировать классфайлами. Нужно делать это удобно, и это постановка задачи. По крайней мере, так сказал Брайан Гёц, который владеет этим JEP-ом 🙂 Всё это часть более масштабного поля брани, но пока не будем углубляться.</p>
<p>В каждом Java-классе есть так называемый &#171;константный пул&#187;, где находится свалка либо каких-то значений (вроде стрингов и интов), или рантаймовые сущности вроде классов и методов. Порыться в этой свалке можно с помощью <a href="https://docs.oracle.com/javase/specs/jvms/se11/html/jvms-6.html#jvms-6.5.ldc">инструкции ldc</a> — &#171;load costant&#187;, поэтому всё это барахло называется loadable constants. Есть ещё специальный случай для invokedynamic, но неважно.</p>
<p>Если мы работаем с классфайлами, то хотим удобно моделировать байткодные инструции, и следовательно — loadable constants. Первое желание — просто наделать соответствующих Java-типов, но как представить им &#171;живой&#187; класс, структуру <a href="https://docs.oracle.com/javase/specs/jvms/se11/html/jvms-4.html#jvms-4.4.1"><code>CONSTANT_Class_info</code></a>? <code>Class</code>-объекты зависят от корректности и консистентности загрузки классов, а с загрузкой классов в Java творится адовая вакханалия. Начнём с того, что не все классы можно загрузить в VM, а описывать-то их всё равно надо!</p>
<p>Хотелось бы как-то попроще управлять вещами вроде классов, методов и менее известными зверьми вроде method handles и динамических констант, с учётом всех этих тонкостей.</p>
<p>Это решается введением новых <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/doc-files/ValueBased.html">value-based</a> типов символических ссылок (в смысле <a href="https://docs.oracle.com/javase/specs/jvms/se11/html/jvms-5.html#jvms-5.1">JVMS 5.1</a>), каждая из которых описывает какую-то конкретный вид констант. Описывает чисто номинально, в отрыве от загрузки классов или вопросов доступа. Они живут в пакетах вроде <code>java.lang.invoke.constant</code> и есть не просят, а на сам патч можно <a href="http://cr.openjdk.java.net/~vromero/constant.api/webrev.04/constants.api.patch">взглянуть здесь</a>.</p>
<hr />
<p><strong>340: <a href="http://openjdk.java.net/jeps/340">One AArch64 Port, Not Two</a></strong><br />
<strong>Внешняя фича</strong>. Уже в JDK 9 сложилась странная ситуация, когда Oracle и Red Hat одновременно поставили на боевое дежурство свои ARM-порты. И вот мы видим конец истории: 64-битную часть оракловского порта убрали из апстрима.</p>
<p>Можно было бы долго копаться в истории самому, но есть способ лучше. В разработке этого JEP поучаствовала компания <a href="http://bell-sw.com/">BellSoft</a>, а её офис расположен в Питере, рядом с бывшим офисом компании Oracle.</p>
<p>Поэтому я сразу обратилился сразу к Алексею Войтылову, CTO компании BellSoft:</p>
<blockquote><p>BellSoft выпускает Liberica JDK, которая, помимо x86 Linux/Windows/Mac и Solaris/SPARC, поддерживает и ARM. Начиная с JDK 9 для ARM мы сфокусировались на улучшении производительности порта AARCH64 для серверных применений и продолжили поддерживать 32-битную часть ARM порта для встраиваемых решений. Таким образом на момент выхода JDK 11 сложилась ситуация, когда 64-битную часть порта от Oracle никто не поддерживал (включая Oracle), и OpenJDK сообщество приняло решение удалить ее, чтобы сфокусироваться на AARCH64 порте. На настоящий момент он более производительный (см, например, <a href="http://openjdk.java.net/jeps/315">JEP 315</a>, который мы заинтегрировали в JDK 11) и, начиная с JDK 12, поддерживает все фичи, присутствовавшие в порте от Oracle (последнюю, Minimal VM, я заинтегрировал в сентябре). Поэтому в JDK 12 я с удовольствием помог Bob Vandette удалить этот рудимент. В итоге OpenJDK сообщество получило один порт на AARCH64 и один порт ARM32, что, безусловно, облегчает их поддержку.</p></blockquote>
<hr />
<p><strong>341: <a href="http://openjdk.java.net/jeps/341">Default CDS Archives</a></strong></p>
<p><strong>Внутренняя фича</strong>. Проблема в том, что при старте Java-приложения загружаются тысячи классов, отчего создаётся ощущение, что Java ощутимо тормозит при старте. Да кому тут врать, это не просто &#171;ощущение&#187; — так оно и есть. Чтобы исправить проблему издревле практикуются различные ритуалы.</p>
<p>Class Data Sharing — это фича, пришедшая к нам <a href="http://www.oracle.com/technetwork/java/javase/8u40-relnotes-2389089.html">из глубины веков</a>, как коммерческая фича из JDK 8 Update 40. Она позволяет упаковать весь этот стартапный мусор в архив какого-то своего формата (вам не нужно знать — какого), после чего скорость запуска приложений возрастает. А через некоторое время появился <a href="https://openjdk.java.net/jeps/310">JEP 310</a>: Application Class-Data Sharing, который позволил обходиться таким же образом не только с системными классами, но и классами приложений.</p>
<p>Для классов JDK это выглядит так. Вначале мы дампим классы командой <code>java -Xshare:dump</code>, и потом запускаем приложение, сказав ему использовать этот кэш: <code>java -Xshare:on -jar app.jar</code>. Всё, стартап немного улучшился. Вот вы знали об этой фиче? Много кто не знает до сих пор!</p>
<p>Здесь выглядит странно вот что: зачем каждый раз самостоятельно ритуально писать <code>-Xshare:dump</code>, если дефолтный результат выполнения этой команды немножко предсказуем ещё на этапе создания дистрибутива JDK? Согласно <a href="https://docs.oracle.com/javase/8/docs/technotes/guides/vm/class-data-sharing.html">документации</a>, если дистрибутив Java 8 устанавливался с помощью инсталлятора, то прямо в момент установки он должен запускать нужные команды за тебя. Типа, инсталлятор тихонечко майнит в уголке. Но зачем? И что делать с дистрибутивом, который распространяется не в виде инсталлятора, а как зипник?</p>
<p>Всё просто: начиная с JDK 12 архив CDS будет генериться создателями дистрибутива, сразу же после линковки. Даже для ночных билдов (при условии что они 64-битные и нативные, не для кросс-компиляции).</p>
<p>Пользователям даже не нужно знать о наличии этой фичи, потому что, начиная с JDK 11, <code>-Xshare:auto</code>включена по-умолчанию, и такой архив подхватится автомагически. Таким образом, просто <strong>сам факт обновления на JDK 12 ускоряет запуск приложения!</strong></p>
<hr />
<p><strong>344: <a href="http://openjdk.java.net/jeps/344">Abortable Mixed Collections for G1</a></strong></p>
<p><strong>Внутренняя фича</strong>. Честно говоря, <del>я ничего не понимаю в работе G1</del> объяснение фичей GC дело неблагодарное, т.к. требует понимания деталей его работы и от объясняющего, и от понимающего. Для большинства же людей, GC — это какой-то чёртик из табакерки, которому можно накрутить в случае чего. Поэтому проблему надо объяснить как-то попроще.</p>
<p><strong>Проблема</strong>: G1 мог бы работать и получше.</p>
<p>Ладно, проблема в том, что GC — это компромисс множества параметров, один из которых — продолжительность паузы. Иногда пауза оказывается слишком долгой, и тогда неплохо иметь возможность её отменить.</p>
<p>Когда такое происходит? G1 действительно анализирует поведение приложения и выбирает фронт работ (выраженный в виде <em>collection set</em>) на основе своих умозаключений. Когда объем работ утверждён, G1 берётся собрать все живые объекты в collection set, упрямо и без остановок, за один присест. Иногда это занимает излишне много времени. По сути, это означает, что G1 неправильно посчитал объем работ. Его можно обдурить, внезапно поменяв поведение своего приложения так, что эвристика будет отрабатывать поверх протухших данных, когда в collection set попадет слишком много старых регионов.</p>
<p>Чтобы выйти из положения, G1 был доработан следующим механизмом: если эвристика регулярно выбирает неверный объем работ, G1 переходит на инкрементальную сборку мусора, шаг за шагом, и каждый следующий шаг (если он не влез в целевое время выполнения) можно отменить. Кое-что инкрементально собирать не имеет смысла (молодые регионы), поэтому вся такая работа выделяется в &#171;обязательный&#187; блок, который таки выполняется непрерывно.</p>
<p>Что с этим делать конечному пользователю? Ничего, нужно обновиться на JDK 12, всё станет лучше само собой.</p>
<hr />
<p><strong>346: <a href="http://openjdk.java.net/jeps/346">Promptly Return Unused Committed Memory from G1</a></strong></p>
<p><strong>Внутренняя фича</strong>. Проблема в том, что если у нас есть большой хип, который никто активно не использует, кажется справедливым получить всю эту неактивную память назад в операционную систему. До JDK 12 этого, впрочем, не происходило.</p>
<p>Чтобы достигнуть своей цели по допустимой длине паузы, G1 производит набор инкрементальных, параллельных и многоэтапных циклов. В JDK 11 он отдаёт commited-память операционной системе только при full GC, или в ходе фазы параллельной маркировки. Если подключить логирование (-Xloggc:/home/gc.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps), то эта фаза отображается как-то так:</p>
<p><script src="https://gist.github.com/olegchir/6221c50aa929aede391da57760b02ddc.js"></script></p>
<p>Забавно то, что G1 как может борется с полными остановками, да и concurrent cycle запускает только при частых аллокациях и забитом хипе. Наша ситуация, когда хип никто не трогает — это нечто прямо противоположное. Ситуации, когда G1 почешется отдать память в операционную систему будут происходить ну очень редко!</p>
<p>Так бы все и забили на эту проблему (&#171;купи ещё больше оперативки, чего как нищеброд!&#187;), если бы не одно но — есть всякие облака и контейнеры, в которых это означает недостаточную утилизацию и потерю серьезных денег. Глядите, какой <a href="https://www.slideshare.net/jelastic/elastic-jvm-automatic-vertical-scaling-of-the-java-heap">крутой доклад</a>, до краёв наполненный болью.</p>
<p>Решением стало научить G1 хорошо вести себя в этом конкретном случае, как уже умеют Шенанда или GenCon из OpenJ9. Нужно определять недостаточную утилизацию хипа и соответственно уменьшать его использование. На каких-то тестах на Томкате это позволило уменьшить расход памяти почти в два раза.</p>
<p>Суть в том, что приложение считается неактивным, или если истёк интервал (в миллисекундах) с последней сборки и нет concurrent cycle, или если <code>getloadavg()</code> на периоде в одну минуту показал нагрузку ниже определённого порога. Как только что-то из этого произошло, запускается периодическая сборка мусора — она конечно, не почистит настолько же хорошо, как полная сборка, зато минимально затронет приложение.</p>
<p>Можно повтыкать вот в этот лог:</p>
<p><script src="https://gist.github.com/olegchir/c6179d390cb7b9ac375e5a0a373dff0d.js"></script></p>
<p>Разобрались? Я — нет. В JEP есть и подробный сурдоперевод каждой строчки лога, и как работает алгоритм, и всё остальное.</p>
<p>&#171;Ну и что, зачем я это узнал?&#187; — спросите вы. Теперь у нас появились две дополнительные ручки: <code>G1PeriodicGCInterval</code> и <code>G1PeriodicGCSystemLoadThreshold</code>, которые можно крутить, когда станет плохо. Плохо ведь точно когда-нибудь станет, это Java, детка!</p>
<hr />
<h1 id="itogi">Итоги</h1>
<p>В результате у нас на руках крепкий релиз — не революция, но эволюция, сфокусированная на улучшении перформанса. Ровно половина улучшений касаются производительности: три JEP-а про GC и один про CDS, которые обещают включиться сами собой, стоит только обновиться до JDK 12. Кроме того, мы получили одну языковую фичу (switch expressions), два новых инструмента для разработчиков JDK (Constants API и тесты на JMH), и теперь сообщество может лучше сфокусироваться над одним-единственным 64-битным портом на ARM.</p>
<p>В общем, переходите на JDK 12 сейчас, и да пребудет с вами Сила. Она вам понадобится.</p>
</article>]]></content:encoded>
			</item>
		<item>
		<title>Мини-новости (18.03.2019)</title>
		<link>https://jug.ru/2019/03/mininews-java-1/</link>
		<pubDate>Mon, 18 Mar 2019 14:18:17 +0000</pubDate>
		<dc:creator><![CDATA[Oleg Chirukhin]]></dc:creator>
				<category><![CDATA[Java]]></category>
		<category><![CDATA[Новости]]></category>
		<category><![CDATA[derived types]]></category>
		<category><![CDATA[Digital Tweens]]></category>
		<category><![CDATA[IntelliJ IDEA 2019.1 Beta 3]]></category>
		<category><![CDATA[IoT]]></category>
		<category><![CDATA[Java 12]]></category>
		<category><![CDATA[Java Testing Weekly]]></category>
		<category><![CDATA[JCP]]></category>
		<category><![CDATA[Kotlin]]></category>
		<category><![CDATA[Swim]]></category>
		<category><![CDATA[Swim.ai]]></category>

		<guid isPermaLink="false">https://jug.ru/?p=5930</guid>
		<description><![CDATA[Помоги Microsoft понять, что ещё нужно для полноценной поддержки JavaEE в Azure! Нужно заполнить короткий опросник, где у тебя спрашивают должность, используемый app server...]]></description>
				<content:encoded><![CDATA[<article class="entry-content"><ul>
<li>Помоги Microsoft понять, что ещё нужно для полноценной поддержки JavaEE в Azure! <a href="https://microsoft.qualtrics.com/jfe/form/SV_6gNjsifFGfnnxqt">Нужно заполнить короткий опросник</a>, где у тебя спрашивают должность, используемый app server и индустрию.</li>
<li><a href="https://gluonhq.com/announcing-javafx-12/">Релизнулся JavaFX 12</a>. Ничего интересного про него сказать особо нельзя, это просто очередной выпуск короткого релизного цикла, который будет поддерживаться вплоть до выпуска JFX13.</li>
<li>Закрыто голосование в Java Community Process. <a href="https://jcp.org/aboutJava/communityprocess/elections/2018.html">Результаты</a>:
<ul>
<li><strong>Ratified Seats</strong>: Alibaba, Goldman Sachs, JetBrains, MicroDoc, SAP SE, Software AG, The Bank of New York Mellon and V2COM</li>
<li><strong>Elected Seats</strong>: Azul Systems, Eclipse Foundation and London Java Community</li>
<li><strong>Associate Seat</strong>: Ivar Grimstad</li>
</ul>
<p>Впервые в составе присутсвует <i>The Bank of New York (BNY) Mellon</i>, представители &#8212; его управляющий директор <a href="https://www.linkedin.com/in/donald-raab-56016a121">Donald Raab</a>, и просто директор &#8212; <a href="https://www.linkedin.com/in/cguntur">Chandra Guntur</a>.</li>
<li>Если вам интересна тема IoT и Digital Twins, то нельзя пропустить <a href="https://blog.swim.ai/press-release-swim.ai-introduces-open-source-swim-platform">появление Swim.ai</a>. Это didital twins платформа под лицензией Apache 2.0. Технически там есть небольшой JVM лоадер на 2 мегабайта, который нужно разложить на джавовые клиенты и серверы, которые при старте создают меш-сеть, которая, цитирую, &#171;с помощью машинного обучения предсказывает изменения в создаваемых данных&#187;, что бы это ни значило. Для нетерпеливых есть <a href="https://developer.swim.ai/start/">quick start</a>.</li>
<li>Вышла <a href="https://blog.jetbrains.com/idea/2019/03/intellij-idea-2019-1-beta-3-is-out/">IntelliJ IDEA 2019.1 Beta 3</a>.</li>
<li>Тестировщики могут прочитать новый выпуск <a href="https://www.petrikainulainen.net/weekly/java-testing-weekly-12-2019/">Java Testing Weekly</a>. Пара ссылок на технические статьи, пару &#8212; на общетеоретические, и ещё нужно обновиться до <a href="https://search.maven.org/artifact/org.mockito/mockito-core/2.25.1/jar">Mockito 2.25.1</a>.</li>
<li>Если вдруг кто-то интересуется судьбой Quarkus, то вышло видео <a href="http://adambien.blog/roller/abien/entry/supersonic_subatomic_java_ee_skimmedjars">SkimmedJARs with quarkus.io</a></li>
<li>Ещё одна мини-статья, уже про <a href="https://blog.frankel.ch/options-manage-derived-attributes-kotlin/">derived attributes в Kotlin</a>.</li>
</ul>
</article>]]></content:encoded>
			</item>
		<item>
		<title>Android-дайджест (1-14 марта)</title>
		<link>https://jug.ru/2019/03/android-digest-36/</link>
		<pubDate>Thu, 14 Mar 2019 13:01:03 +0000</pubDate>
		<dc:creator><![CDATA[Евгений Трифонов]]></dc:creator>
				<category><![CDATA[Android]]></category>

		<guid isPermaLink="false">https://jug.ru/?p=5921</guid>
		<description><![CDATA[Ну, в этот раз с главной темой всё понятно: Появилась бета-версия Android Q, можно установить на любой Pixel. Google пишет в первую очередь об...]]></description>
				<content:encoded><![CDATA[<article class="entry-content"><p>Ну, в этот раз с главной темой всё понятно:</p>
<ul>
<li>Появилась бета-версия Android Q, можно установить на любой Pixel. Google <a href=https://android-developers.googleblog.com/2019/03/introducing-android-q-beta.html>пишет</a> в первую очередь об изменениях во имя приватности пользователя — так что нам впору не потирать руки «сейчас я буду пробовать все новые фичи», а вздыхать «сейчас я буду разбираться, что у меня отвалится». Например, теперь пользователи могут давать приложению не только полный доступ к своей локации, но и частичный «когда приложение используется» — если вы часто обращаетесь к локации в фоне, готовьтесь в части случаев лишиться этой информации. По приватности в Android Q сделан отдельный <a href=https://developer.android.com/preview/privacy/checklist>чек-лист</a>, там расписано, кого заденет и что им делать.<br />
&nbsp;</p>
<li>Но есть в Q и более приятные для разработчиков изменения. Например, если вам в приложении нужно сказать пользователю «ну ты к интернету-то подключись», можно не отправлять его разбираться самостоятельно, а с помощью нового <a href=https://developer.android.com/reference/android/provider/Settings.Panel>Setting Panel API</a> открыть соответствующие настройки прямо поверх своего приложения. <b>Джо Бёрч</b> из Buffer уже успел лично поковыряться и написать <a href=https://joebirch.co/2019/03/14/exploring-android-q-settings-panels/>блог-пост</a>.<br />
&nbsp;</p>
<li>А ещё бета-версия Q принесла и такие новости, о которых Google в своём посте не пишет. Там <a href=https://www.androidpolice.com/2019/03/14/android-q-brings-native-desktop-mode-support/>нашли</a> десктопный режим (ждём подробностей на I/O?), и там всё <a href=https://twitter.com/topjohnwu/status/1105947979679191041>стало</a> заметно сложнее с рутованием.<br />
&nbsp;</p>
<li>На фоне бета-версии Q эта новость несколько меркнет, но ещё <a href=https://android-developers.googleblog.com/2019/03/android-jetpack-workmanager-stable.html>дошёл</a> до релиза WorkManager. Тут напрашивается какая-то шутка о том, что WorkManager и должен меркнуть <i>на фоне</i>.<br />
&nbsp;</p>
<li>К другим новостям: <b>Джейк Уортон</b> в последнюю пару недель лютует. Сначала в слэк-чате Kotlin решительно критиковал действия собственных коллег из Google: «я не против того, чтобы они были opinionated, даже если их решения неправильные, но не запихивайте свои плохие решения всем в глотку, удаляя уже существующие механизмы». А затем <a href=https://twitter.com/JakeWharton/status/1103836521327706113>заявил</a>, что от Mockito вреда больше пользы, и <a href=https://github.com/square/retrofit/commit/acd41d18eb9780e0150f50650209fc5732e888b5>выпилил</a> его из тестов Retrofit.<br />
&nbsp;</p>
<li>В прошлый раз мы писали, что EPAM опенсорснули пару библиотек для удобной работы с котлиновскими корутинами. А теперь <b>Владимир Иванов</b> <a href=https://proandroiddev.com/caching-with-kotlin-coroutines-7d819276c820>написал</a> про кэширование с использованием одной из них, CoroutineCache. В конце текста есть благодарность <b>Кириллу Розову</b>, который в мае на питерском Mobius <a href=https://mobiusconf.com/talks/4m2vganfahdoxedss0br9l/>расскажет</a> как раз о том, как правильнее «корутинить».<br />
&nbsp;</p>
<li>Среди зарубежных техноблогеров сейчас волна «пора валить с Medium на стэндэлоны», на этом фоне <b>Крейг Рассел</b> <a href=https://twitter.com/trionkidnapper/status/1105589032518598659>твитнул</a> «а дайте ссылки на свои Android-блоги», и там набралось много реплаев — если вам не хватает Андроида в жизни, посмотрите.<br />
&nbsp;</p>
<li>Рубрика «полезняшки»: Trello опенсорснули библиотеку <a href=https://github.com/trello/mr-clean/>Mr. Clean</a>, которая упрощает задачу «чтобы в логи не попало ничего личного».<br />
&nbsp;</p>
<li>И напоследок — Navigation перешёл от версии 1.0.0rc к 2.0.0rc, но на практике это означает попросту переезд в AndroidX:<br />
<blockquote class="twitter-tweet" data-width="550">
<p lang="en" dir="ltr">Navigation 2.0.0-rc02 is out now! Wait, what? Yep, the androidx.navigation artifacts are here! 1.0.0-rc02 and 2.0.0-rc02 have identical behavior, just a change to the AndroidX dependencies. A combined 1.0+2.0 stable is just around the corner!<a href="https://t.co/2UOElQ0cMA">https://t.co/2UOElQ0cMA</a> <a href="https://t.co/nAfRJ2UGHN">pic.twitter.com/nAfRJ2UGHN</a></p>
<p>&mdash; Ian Lake (@ianhlake) <a href="https://twitter.com/ianhlake/status/1103372174277013504?ref_src=twsrc%5Etfw">March 6, 2019</a></p></blockquote>
<p><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> </p>
</article>]]></content:encoded>
			</item>
		<item>
		<title></title>
		<link>https://jug.ru/2019/03/5906/</link>
		<pubDate>Wed, 13 Mar 2019 12:26:02 +0000</pubDate>
		<dc:creator><![CDATA[Oleg Chirukhin]]></dc:creator>
				<category><![CDATA[Архив: Анонсы]]></category>

		<guid isPermaLink="false">https://jug.ru/?p=5906</guid>
		<description><![CDATA[Это статья об уже прошедшем событии. Приходите на новые джуги! В четверг, 21 марта, в петербургском офисе компании Oracle состоится встреча JUG.ru с Дмитрием...]]></description>
				<content:encoded><![CDATA[<article class="entry-content"><table style="width: 100%; border: 2px solid orange;">
<tbody>
<tr>
<td style="background-color: yellow; text-align: center; font-weight: bold;">Это статья об уже прошедшем событии. Приходите на новые джуги!</td>
</tr>
</tbody>
</table>
<hr>
<p>В четверг, 21 марта, в петербургском офисе компании Oracle состоится встреча JUG.ru с Дмитрием Чуйко и Александром Белокрыловым (@alexbel) из BellSoft. Дмитрий расскажет про Java в контейнерной среде, а Александр — про создание и поддержку своего Java-дистрибутива.</p>
<table style="width: 100%;">
<tbody>
<tr>
<td style="background-color: yellow; text-align: center;">Участие бесплатное, регистрация обязательная.<br />
Зарегистрироваться <a href="https://jugru.timepad.ru/event/926812/">можно по этой ссылке</a>.</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<h2>1. Практическое применение новой функциональности Java 11 в контейнерном окружении.</h2>
<p><em>Дмитрий Чуйко</em></p>
<p>Как прекрасно, что в Java 11 можно создавать и развёртывать свои образы среды исполнения — сustom runtime images. Но их использование создаёт дополнительные требования к библиотекам и процессу разработки. Всегда ли это возможно и всем ли это нужно?<br />
Часто мы просто хотим сэкономить, и можно использовать универсальные образы. Вопрос в том, какими ресурсами мы управляем, в каких пределах и для чего. Часто это физические ресурсы одной машины и время.</p>
<p>Начиная с 10-ки Java в контейнере ведёт себя адекватно, работа над этим продолжилась и в Java 11. Мы посмотрим на эффективность новой функциональности Java 11 для контейнерного окружения на конкретных примерах Docker-образов c Liberica JDK 11. Но это только начало истории, так как в контейнерах с Java запихана целая операционная система.</p>
<p><strong>О спикере</strong></p>
<p><img style="margin-right: 20px;" src="https://ucare.timepad.ru/7baaf7ae-98c8-4786-8d70-8b0016756f27/-/preview/" width="300" align="left" /> Дмитрий Чуйко — инженер по производительности в компании BellSoft, которая входит в топ-5 контрибьютеров OpenJDK. До того, как присоединиться к BellSoft, Дмитрий программировал на Java, а затем работал над Hotspot JVM в Oracle. Весь предыдущий опыт работы с Java показал, что наиболее интересные проблемы в приложениях получают свои решения в базовой платформе. В настоящее время Дмитрий в основном оптимизирует OpenJDK для ARM64, компания даже реализовала на эту тему собственный JEP 315 в Java 11.</p>
<hr />
<h2 id="2java">2. Делая собственный дистрибутив Java.</h2>
<p><em>Александр Белокрылов</em></p>
<p>Некоторые люди думают, что OpenJDK — это дистрибутив Java, который подходит для использования в продакшене. На самом деле, OpenJDK — это <i>кодовая база</i>, которую необходимо <i>собрать</i> и <i>протестировать</i> для работы в корпоративной среде.<br />
В данном докладе Александр поделится своими знаниями о том, что нужно для создания готового бинарника OpenJDK, какая работа за этим стоит, а также расскажет о том, кто ещё (и зачем) делает собственные бинарные сборки OpenJDK.</p>
<p><strong>О спикере</strong></p>
<p><img style="margin-right: 20px;" src="https://habrastorage.org/webt/il/_k/pz/il_kpzuen_dky6vhupvrrqotct0.png" width="300" align="left" />Александр Белокрылов работает в индустрии IT более 15 лет, прошел путь от инженера до руководителя. В компании Oracle руководил развитием продукта Java ME Embedded, а позднее одного из компонентов Oracle IoT Cloud Service. В 2017 с группой единомышленников основал компанию BellSoft, которая выпускает и поддерживает собственный Java-дистрибутив Liberica JDK для Linux x86, Linux ARM, Windows, Mac и других, а также разрабатывает решения для анализа больших данных и IoT. Неоднократный участник конференций JPoint, Joker, JavaOne, JEEConf и многих других.</p>
<h2>Интервью</h2>
<p>Недавно мы делали интервью с Александр Белокрыловым и Алексеем Войтыловым, которое хорошо подходит для понимания проблематики, с которой работает компания BellSoft, и точки зрения, исходя из которой строится логика их докладов. Прочитать интервью <a href="https://habr.com/ru/company/jugru/blog/426565/">можно по ссылке</a>.</p>
<h2>О компании Bellsoft</h2>
<p>Компания <a href="https://bell-sw.com/">BellSoft</a> основана в 2017 году выходцами из Центра Разработок Oracle в Санкт-Петербурге. BellSoft активно участвует в развитии Java-платформы и входит в топ-5 контрибьюторов OpenJDK вместе с Oracle, RedHat, SAP и Google. Компания выпускает и поддерживает Liberica JDK — Java-дистрибутив на основе OpenJDK для расширенного набора платформ, включая контейнеризованные сборки c Alpine Linux. BellSoft имеет лицензию TCK, поэтому все Liberica JDK гарантированно соответствует стандарту Java SE.<br />
Деятельность компании также связана с развитием и поддержкой других сложных продуктов с открытым кодом, таких как OpenJDK, компиляторов GCC и LLVM и платформы работы с большими данными Hadoop.</p>
<h2 id="-1">Как попасть на встречу</h2>
<p><strong>Когда</strong>: 21 марта c 20:00 до 22:30</p>
<p><strong>Где</strong>: Питер, 10-я Красноармейская, 22А,<br />
БЦ «Келлерман», 2 этаж, офис компании Oracle.<br />
<a href="https://2gis.ru/spb/query/%2010-%D1%8F%20%D0%9A%D1%80%D0%B0%D1%81%D0%BD%D0%BE%D0%B0%D1%80%D0%BC%D0%B5%D0%B9%D1%81%D0%BA%D0%B0%D1%8F%2C%2022%D0%90%2C%20%D0%91%D0%A6%20%C2%AB%D0%9A%D0%B5%D0%BB%D0%BB%D0%B5%D1%80%D0%BC%D0%B0%D0%BD%C2%BB/firm/5348552838662365?queryState=center%2F30.294998%2C59.91254%2Fzoom%2F16">Посмотреть на карте</a>.</p>
<p><span style="color: #ff0000;"><a href="https://jugru.timepad.ru/event/926812/">ССЫЛКА НА РЕГИСТРАЦИЮ</a></span></p>
</article>]]></content:encoded>
			</item>
		<item>
		<title>Android-дайджест (15-28 февраля)</title>
		<link>https://jug.ru/2019/02/android-digest-35/</link>
		<pubDate>Thu, 28 Feb 2019 13:21:08 +0000</pubDate>
		<dc:creator><![CDATA[Евгений Трифонов]]></dc:creator>
				<category><![CDATA[Android]]></category>

		<guid isPermaLink="false">https://jug.ru/?p=5895</guid>
		<description><![CDATA[Новости второй половины февраля: Прямо сегодня (28 февраля) с 20:00 до 21:00 команда Android Studio ответит на вопросы из комментариев. Так что, если у...]]></description>
				<content:encoded><![CDATA[<article class="entry-content"><p>Новости второй половины февраля:</p>
<ul>
<li>Прямо сегодня (28 февраля) с 20:00 до 21:00 команда Android Studio <a href=https://www.reddit.com/r/androiddev/comments/av3lhx/were_on_the_engineering_team_for_android_studio/>ответит</a> на вопросы из комментариев. Так что, если у вас есть вопросы к создателям нашей любимой IDE, сейчас самое время их там озвучить. Но только они должны быть конструктивными, вариант «Какого хрена всё глючит и тормозит?» не подходит (хоть он и оказался бы самым популярным).<br />
&nbsp;</p>
<li>Помимо этой акции, Google коммуницирует с нами и другими способами. Во-первых, компания сейчас проводит <a href=https://google.qualtrics.com/jfe/form/SV_5vja2Z0wpHnoBQ9?link=4t37w02>опрос</a> разработчиков. Во-вторых, опубликовала <a href=https://medium.com/androiddevelopers/android-studio-project-marble-apply-changes-e3048662e8cd?linkId=63940967>подробный пост</a> о новой фиче Apply Changes, с которой нам должно стать лучше, чем сейчас с Instant Run. В-третьих, появился ещё и сторонний <a href=https://zdominguez.com/2019/02/20/bug-reports.html>пост</a> о том, как правильно заводить баг-репорты в Android Public Tracker — откровений в нём нет, но пишут, что это и правда работает.<br />
&nbsp;</p>
<li>Как вы сами наверняка знаете, производители смартфонов наперебой представляют складные телефоны — <a href=https://www.theverge.com/2019/2/20/18231249/samsung-galaxy-fold-folding-phone-features-screen-photos-size-announcement>Samsung Fold</a> складывается в одну сторону, <a href=https://www.theverge.com/2019/2/24/18238269/huawei-foldable-phone-mate-x-price-release-date-specs-mwc-2019>Huawei Mate X</a> в другую, у Oppo пока прототип. Как вы сами наверняка знаете, стоят они столько, что их можно не рассматривать как сколько-нибудь значимую долю рынка. Тем не менее, если вы хотите, чтобы ваше приложение корректно на них работало, напомним про <a href=https://android-developers.googleblog.com/2018/11/get-your-app-ready-for-foldable-phones.html>ноябрьский пост</a> Гугла о поддержке этих раскладушек (вкратце: если у вас корректно обрабатывается смена конфигурации, то вы уже молодец).<br />
&nbsp;</p>
<li>А вот то, что больше затрагивает разработчиков. Как мы помним, с прошлого года Google решил ежегодно повышать требуемый targetSdkVersion, и теперь назвал <a href=https://android-developers.googleblog.com/2019/02/expanding-target-api-level-requirements.html?linkId=63903200>даты</a> для обязательной поддержки API 28 (Android P): для новых приложений — с августа, для апдейтов старых — с ноября. Как и прежде, на приложениях без апдейтов эти требования не сказываются, на minSdkVersion напрямую тоже.<br />
&nbsp;</p>
<li>Рубрика «мелочь, а приятно». Если вдруг вы всё это время жили без знания, что в Android Studio можно раскрасить лог-сообщения разных категорий разными цветами (на свой выбор) — теперь живите с <a href=https://medium.com/snapp-mobile/quick-android-studio-tips-tricks-part-1-change-color-in-logcat-db63b54204cb>этим знанием</a>.<br />
<img src="https://jug.ru/wp-content/uploads/2019/02/logcat.png" alt="" width="1023" height="321" class="aligncenter size-full wp-image-5903" /><br />
&nbsp;</p>
<li>В <b>Android Dev Подкасте</b> недавно решили поэкспериментировать и сделали хардкорный низкоуровневый <a href=https://androiddev.apptractor.ru/android-dev-podkast-87/>выпуск</a> — JNI, C++, вот это всё. Если после этого выпуска вам захочется сделать свой первый «сишный» хелловорлд — по совпадению как раз появился ещё и <a href=https://medium.com/androiddevelopers/getting-started-with-c-and-android-native-activities-2213b402ffff?linkId=64049315>пост</a> об этом. Ближе к концу поста есть фраза «If everything goes well, you can hit debug and see a blank window!», звучит очень воодушевляюще: нативный мир так суров, что в нём дойти до пустого экрана — это уже удача.<br />
&nbsp;</p>
<li>К вопросу о подкастах: в Lyft завели свой <a href=https://play.pocketcasts.com/web/podcasts/share?id=d134f3b0-125b-0137-f265-1d245fc5f9cf>мобильный подкаст</a>, и если вам в жизни хочется как можно больше <b>Артёма Зиннатуллина</b>, знайте, что в выпуске &#171;Managing Our Releases&#187; он там тоже появляется.<br />
&nbsp;</p>
<li>Истории «из Google Play по беспределу удалили приложение» уже стали привычным фоновым шумом, но тут произошёл особо впечатляющий случай: под раздачу <a href=https://twitter.com/TitaniumBackup/status/1100138746958282758>попал</a> Titanium Backup, то есть популярнейший проект с отличной репутацией. Поднялась шумиха, в итоге приложение восстановили, но ситуация, когда даже в таком случае дело доходит до удаления, выглядит очень нездоровой.<br />
&nbsp;</p>
<li>И напоследок: если заменить названия справа на &#171;Flutter, React Native, Xamarin&#187;, то будет казаться, что эту картинку кто-то сделал вчера, а не много лет назад.<br />
<blockquote class="twitter-tweet" data-width="550">
<p lang="en" dir="ltr">Old but still 100% accurate hence gold <a href="https://t.co/9RfCF74Eic">pic.twitter.com/9RfCF74Eic</a></p>
<p>&mdash; Farbod Saraf (@farbodsaraf) <a href="https://twitter.com/farbodsaraf/status/1096465422348623872?ref_src=twsrc%5Etfw">February 15, 2019</a></p></blockquote>
<p><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> </p>
</article>]]></content:encoded>
			</item>
		<item>
		<title>Java-дайджест #84</title>
		<link>https://jug.ru/2019/02/digest-week-84/</link>
		<pubDate>Fri, 15 Feb 2019 17:35:30 +0000</pubDate>
		<dc:creator><![CDATA[Oleg Chirukhin]]></dc:creator>
				<category><![CDATA[Java]]></category>
		<category><![CDATA[Новости]]></category>

		<guid isPermaLink="false">https://jug.ru/?p=5875</guid>
		<description><![CDATA[Этот дайджест взаимодополняет выпуск подкаста «Разбор Полётов». На этот раз в студии были Алексей Абашев и Олег Чирухин. Получить запись подкаста можно либо пройдя...]]></description>
				<content:encoded><![CDATA[<article class="entry-content"><p>Этот дайджест взаимодополняет выпуск подкаста «Разбор Полётов». На этот раз в студии были Алексей Абашев и Олег Чирухин.<br />
Получить запись подкаста можно либо пройдя по ссылке <a href="http://razbor-poletov.com/2019/02/episode-200.html">на сайт РП</a>, либо скачав <a href="http://traffic.libsyn.com/razborpoletov/razbor_200.mp3">MP3-файл</a>.</p>
<ul>
<li>Groovy вернулся в <a href="https://tiobe.com/tiobe-index/">TIOBE TOP-20</a> и даже обогнал Swift. Есть подозрение, что все это благодаря распространению Jenkins;</li>
<li>Вышел новый джавовый фреймворк <a href="https://github.com/alkal-io/kalium">Kalium</a>. Он заточен на асинхронную обработку событий с помощью аннотации <code>@On</code> и собственной масштабируемой очереди событий, коей на данный момент может служить только Kafka:<script src="https://gist.github.com/olegchir/7ac16d12063f140dc49f652258929534.js"></script></li>
<li>29 февраля старые форумы Spring <a href="https://spring.io/blog/2019/02/06/legacy-forums-will-be-shutdown-february-28">закроются</a>. Бэкапить они их не собираются, надо &#8212; юзайте archive.org. Но они озаботились, чтобы данные из тех постов, на которые были ссылки из багтрекера, были перенесены в соответствующие тикеты так или иначе.</li>
<li>Вышли новые версии <a href="https://reactjs.org/blog/2019/02/06/react-v16.8.0.html">React</a> и <a href="https://medium.com/the-vue-point/vue-2-6-released-66aa6c8e785e">Vue</a>. В реакте запилили хуки, а вью получило одно из немногих мажорных обновлений второй версии (сейчас все усилия сконцентрированы на дизайне третьей версии). У Ангуляра напротив случилась четвертая бета восьмой версии, &#8212; в седьмой версии бет было 8 штук, так что это можно считать половиной пути.</li>
<li>Вышла IntelliJ IDEA 2019.1 EAP3, про фичи есть подробный <a href="https://blog.jetbrains.com/idea/2019/02/whats-new-in-intellij-idea-2019-1-eap-3/">пост Златы</a>. Если кому-то интересно проследить историю разработки, то имеется <a href="https://blog.jetbrains.com/idea/2019/01/whats-new-in-intellij-idea-2019-1-eap2/">пост про предыдущий EAP2</a>. Из того, что сразу бросается в глаза &#8212; отдельные сборки с JetBrains Runtime 11. Еще они <a href="https://blog.jetbrains.com/idea/2019/02/unbundling-tfs-and-cvs-integration-plugins/">пообещали выбросить</a> из следующего EAP плагины интеграции с TFS и СVS по дефолту &#8212; пора мамонтам упокоиться.</li>
<li>Теперь у нас есть <a href="https://projects.eclipse.org/projects/ee4j.glassfish/downloads">GlassFish 5.5.0</a> (+WebProfile). Напоминаю, что в начале 2016 года поползли слухи, что Oracle решила забросить JavaEE, а в августе 2017 это случилось официально, что привело к переезду под крыло Eclipse Foundation с названием проекта EE4J. В 2018 году проект стал переползать в репозиторий eclipse-ee4j на GitHub, и вот мы сейчас находимся в 2019, когда этот процесс перехода почти завершился. Теперь весь код GlassFish можно собрать на инфраструктуре Eclipse, плюс этот код прошел все тесты на совместимость с Java EE 8. Выход новой версии GlassFish означает последние шаги к реализации Jakarta EE 9.</li>
<li>Еще одна нереляционная база данных засунула в себя реляционные механизмы &#8212; на этот раз <a href="https://en.wikipedia.org/wiki/FoundationDB">FoundationsDB</a>, разработанная в недрах Apple. Несмотря на то, что это изначально key-value база в архитектуре share nothing, предназначенная для облаков. Теперь есть некий Record Layer, где рекорды &#8212; это сообщения <a href="https://en.wikipedia.org/wiki/Protocol_Buffers">протобуфа</a>, также имеются индексы (включая продвинутые индексы вроде групповых счетчиков или полнотекстовых индексов) и полноценный планировщик запросов. Поверх этого они запилили подмножество MongoDB API 3, которое выделили в отдельный <a href="https://foundationdb.github.io/fdb-document-layer/">Document Layer</a>. Все это уже используется в продакшене в эппловском <a href="https://developer.apple.com/icloud/cloudkit/">CloudKit</a>. Интересный тренд.</li>
<li>Google <a href="https://cloud.google.com/blog/products/databases/announcing-cloud-firestore-general-availability-and-updates">объявили</a>, что их NoSQL база данных <a href="https://cloud.google.com/firestore/">Firestore</a> вышла в релиз. Фича еще и в том, что у нее <a href="https://cloud.google.com/blog/products/databases/announcing-cloud-firestore-general-availability-and-updates">много дата-центров</a> по всему миру (в России &#8212; нет). Она обеспечивает SLA 99.999% для multi-region инстансов и and 99.99% для regional инстансов. Некоторые куски веб-интерфейса всё ещё в бете.</li>
<li>В двенадцатый Java Stream API добавят новый коллектор, teeing. Он позволяет собирать двумя независимыми коллекторами, и потом объединять результаты:<script src="https://gist.github.com/olegchir/f2af6ff5729e3194b961a7ac3b1ffc87.js"></script>Также не надо забывать, что коллекторы можно делать самостоятельно:<script src="https://gist.github.com/olegchir/210ff88ab0fc73221387e48f4c61e908.js"></script>Делать такое вручную &#171;красивым&#187; спомобом было бы весьма болезненно. Подробней прочитать можно как всегда, <a href="https://bugs.openjdk.java.net/browse/JDK-8209685">в багтрекере</a>.</li>
<li>Седьмого февраля вышел JUnit 5.4.0. Это очень интересный релиз, на который, возможно, стоит уже переходить. Они заморочились с разными мелкими блокирующими переход вещами, вроде того, что новый артефакт junit-platform-reporting содержит LegacyXmlReportGeneratingListener, который теперь генерит репорты, совместимые с JUnit 4. Подробнее есть <a href="https://junit.org/junit5/docs/5.4.0/release-notes/index.html">в ченжлоге</a>.</li>
<li>Прошел FOSDEM 2019 &#8212; крупнейшая в мире FOSS-конференция. Некоторые доклады Java-трека уже <a href="https://fosdem.org/2019/schedule/track/free_java/">выложены на сайте</a>.</li>
<li>Вышла первая в мире <a href="https://www.redhat.com/en/about/press-releases/red-hat-introduces-industrys-first-kubernetes-native-integrated-developer-environment-red-hat-codeready-workspaces">Kubernetes-native IDE от RedHat</a>, <a href="https://developers.redhat.com/products/codeready-workspaces/overview/?extIdCarryOver=true&amp;sc_cid=701f2000001OH7EAAW">CodeReady Workspaces</a>. Заточена на использование вместе с Red Hat OpenShift, Red Hat’s Docker/Kubernetes platform и Red Hat Enterprise Linux (RHEL).</li>
<li>Разработчики Clojure провели очередной <a href="https://clojure.org/news/2019/02/04/state-of-clojure-2019">ежегодный опрос</a> комьюнити. Результаты можно <a href="https://ru.surveymonkey.com/results/SM-S9JVNXNQV/">посмотреть здесь</a>. Есть ложь, а есть статистика, поэтому не буду делать здесь никаких выводов, смотрите на результаты сами. Голосовало 2461 человек &#8212; вам решать, много это или мало.</li>
<li>Вышла книга <a href="https://habr.com/ru/company/piter/blog/438976/">«Spring. Все паттерны проектирования»</a>, автор &#8212; Динеш Раджпут, издательство Питер.</li>
<li><a href="https://docs.gradle.org/5.2/release-notes.html">Вышел Gradle 5.2</a>. Из интересного &#8212; сборка нативных приложений (C++ итп), плюс возможность описать настройки в <a href="https://docs.gradle.org/5.2/userguide/java_platform_plugin.html">Java Platform Plugin</a> &#8212; это что-то типа мавеновского BOM, где можно описать ограничения:<script src="https://gist.github.com/olegchir/a1a84a25960b09466a88d500a20907f9.js"></script></li>
<li>Релизнулся <a href="https://docs.aws.amazon.com/corretto/index.html#lang/en_us">Amazon Corretto 8</a> &#8212; LTS дистрибутив OpenJDK от амазон с патчами на перфоманс и секурити.</li>
<li>Открылись репозитории JDK 13. Пока что есть только <a href="https://openjdk.java.net/jeps/348">JEP 348</a>, он примерно о том, что некоторые методы можно помечать как кандидаты на интринсификацию.</li>
</ul>
<h1 id="">Почитать</h1>
<ul>
<li>Очередной выпуск <a href="https://spring.io/blog/2019/02/05/this-week-in-spring-february-5th-2019">This Week in Spring</a> за пятое февраля &#8212; всего <strong>один</strong> выпуск новой версии, а все остальное &#8212; подкасты, статьи, посты.</li>
<li>Статья в блоге Eclipse, <a href="https://blogs.eclipse.org/post/thabang-mashologu/open-source-can-you-afford-not-get-involved?utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed%3A+eclipse%2Ffnews+%28Eclipse+Foundation+News%29">Open Source: Can you afford not to get involved?</a>.</li>
<li>Интересная статья о том, как <a href="http://andresalmiray.com/improving-build-times-with-gradle-buildscans/">уменьшать время компиляции</a> при использовании Gradle.</li>
<li><a href="https://www.infoq.com/articles/java-12-switch-expression?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global">Руководство по Switch Expressions</a> для Java 12 на InfoQ. Нужно бы запилить похожую статью на Хабр, но руки никак не доходят.</li>
<li><a href="https://blog.frankel.ch/openjdk-11-tools-trade/">OpenJDK 11, tools of the trade</a> &#8212; пост об инструментах OpenJDK, и ее <a href="https://www.reddit.com/r/java/comments/ahyqc9/openjdk_11_tools_of_the_trade/">обсуждение на Reddit</a>. На Хабр тоже стоит запилить что-то подобное, наверное.</li>
</ul>
<h2 id="-1">Хабр</h2>
<ul>
<li><a href="https://habr.com/ru/post/439432/">Как стать Java разработчиком за 1,5 года</a></li>
<li><a href="https://habr.com/ru/company/jugru/blog/439796/">Spring Boot 2: чего не пишут в release notes</a> &#8212; статья от нашего спикера, Владимира Плизги;</li>
<li><a href="https://habr.com/ru/company/jugru/blog/438866/">Строители против синтаксиса Java</a> &#8212; статья нашего спикера, Сергея Егорова;</li>
<li><a href="https://habr.com/ru/post/439648/">Внутренние и вложенные классы java. Часть 1</a> &#8212; статья от кого-то, помеченного как Recovery Mode (реабилитационный пост от пользователя с отрицательной кармой);</li>
<li><a href="https://habr.com/ru/post/439596/">Как я ускорил обработку изображений на Android в 15 раз</a> &#8212; а это, наоборот, пост от новичка из песочницы;</li>
<li><a href="https://habr.com/ru/company/naumen/blog/439304/">[Екатеринбург, анонс] Митап для Java-разработчиков</a>;</li>
<li><a href="https://habr.com/ru/post/438808/">ModelMapper: путешествие туда и обратно</a></li>
<li><a href="https://habr.com/ru/post/439210/">Ява после извержения вулкана</a> &#8212; люто проминусованная (на -24) статья, где автор пытается рассуждать о том, что можно улучшить в языке Java;</li>
<li><a href="https://habr.com/ru/company/haulmont/blog/438980/">Spring Boot 2: что нового?</a>;</li>
<li><a href="https://habr.com/ru/company/sberbank/blog/438548/">Lombok, sources.jar и удобный дебаг</a>;</li>
</ul>
<h1>Дайджест готовили</h1>
<ul>
<li>Текстовая версия: Олег Чирухин;</li>
<li>Подкаст «Разбор Полётов» (<a href="http://razbor-poletov.com/2019/02/episode-200.html">ссылка на запись</a>): Виктор Гамов, Барух Садогурский, Алексей Абашев, Антон Архипов, Андрей Когунь и Олег Чирухин.</li>
</ul>
</article>]]></content:encoded>
	<enclosure url="http://traffic.libsyn.com/razborpoletov/razbor_200.mp3" length="0" type="audio/mpeg" />
		</item>
	</channel>
</rss>

<!-- Performance optimized by W3 Total Cache. Learn more: https://www.w3-edge.com/products/

Minified using disk

 Served from: jug.ru @ 2019-04-28 19:28:42 by W3 Total Cache -->